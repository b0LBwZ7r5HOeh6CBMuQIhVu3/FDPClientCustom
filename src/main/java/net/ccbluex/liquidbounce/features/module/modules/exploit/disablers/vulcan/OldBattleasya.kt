package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.vulcan

import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.UpdateEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.features.module.modules.movement.speeds.matrix.idk
import net.ccbluex.liquidbounce.utils.PacketUtils.sendPacketNoEvent
import net.ccbluex.liquidbounce.utils.timer.MSTimer
import net.ccbluex.liquidbounce.value.BoolValue
import net.minecraft.network.play.client.C00PacketKeepAlive
import net.minecraft.network.play.client.C03PacketPlayer
import net.minecraft.network.play.client.C13PacketPlayerAbilities


class OldBattleasya : DisablerMode("OldBattleasya") {
    private val idkValue = BoolValue("${valuePrefix}idk", true)
    private val idk2Value = BoolValue("${valuePrefix}idk2", true)
    val timer = MSTimer()
    override fun onUpdate(event: UpdateEvent) {
        if (timer.hasTimePassed(40) && idk2Value.get()) {
            val c13 = C13PacketPlayerAbilities()
            c13.isCreativeMode = true
            c13.isInvulnerable = true
            sendPacketNoEvent(c13)
            if(!idkValue.get())timer.reset()
        }
        if(idkValue.get())timer.reset()
    }

    override fun onPacket(event: PacketEvent) {
        val p = event.packet
        if ((p is C00PacketKeepAlive || p is C03PacketPlayer) && mc.thePlayer.ticksExisted % 3 == 0) {
            event.cancelEvent()
        }
    }
}