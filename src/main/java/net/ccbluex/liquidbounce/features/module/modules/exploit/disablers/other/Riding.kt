package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.other

import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.UpdateEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.utils.PacketUtils.sendPacketNoEvent
import net.ccbluex.liquidbounce.value.BoolValue
import net.minecraft.network.play.client.C03PacketPlayer
import net.minecraft.network.play.client.C0CPacketInput


class Riding : DisablerMode("Riding") {
    private val infinitySpeedValue = BoolValue("${valuePrefix}InfinitySpeed", true)
    override fun onPacket(event: PacketEvent) {
        val packet = event.packet
        if (packet is C03PacketPlayer && !infinitySpeedValue.get()) {
            mc.netHandler.addToSendQueue(C0CPacketInput(mc.thePlayer.moveStrafing, mc.thePlayer.moveForward, mc.thePlayer.movementInput.jump, mc.thePlayer.movementInput.sneak))
            disabler.debugMessage("Packet C0C")
        }
    }

    override fun onUpdate(event: UpdateEvent) {
        if (mc.thePlayer.ticksExisted % 2 == 0) {
            mc.netHandler.addToSendQueue(C0CPacketInput(Int.MAX_VALUE.toFloat(), Int.MAX_VALUE.toFloat(), false, false))
        }
    }
}